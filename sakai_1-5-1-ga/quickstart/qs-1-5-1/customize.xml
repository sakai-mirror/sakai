<?xml version="1.0"?>
<!-- ====================================================================== 
     Oct 8, 2004 4:13:10 PM                                                        

     distribution    
     build file to customize a Sakai QuickDemo distribution.
     
     haines                                                                
     ====================================================================== -->


<project name="sakai-customize-CORE" default="customizeSakai">
  <description>
    Ant build file to customize Sakai QuickDemo distribution.
  </description>

  <property file="customize.properties"/>
  <property environment="env" />


  <!-- ================================= 
       target: help              
       ================================= -->
  <target name="help" description="print out information on using build file">
    <echo>
      This script will customize a distribution of the Sakai QuickDemo.
      By default it will ensure that Sakai will find it's support files 
      in the directory specified in the customize.properties file.  The other 
      thing that can be customized is the underlying data storage method.
      The quick start comes configured to use a custom XML file storage 
      mechanism.  This can be changed to use MySQL by following the directions on the
      QuickDemo web page.
    </echo>
  </target>

  <!-- Install the proper context.  First determine the OS then
	  call both windows and Unix installs.  The wrong one won't
	  run because of the property test in the target element.  -->

  <target name="findOS" description="Determine the current host OS" >
    <!-- set properties depending the host os -->
    <condition property="windows">
      <os family="windows"/>
    </condition>
    <condition property="unix">
      <os family="unix"/>
    </condition>
  </target>

  <target name="installWindowsContext" if="windows">
    <echo>installing Windows context.xml</echo>
    <copy tofile="${work.tomcat.installed.dir}/context.xml" file="${work.helper.dirname}/sakai-dispatch/META-INF/context_windows.xml"/> 
  </target>

  <target name="installUnixContext" if="unix">
    <echo>installing Unix (and OS X) context.xml </echo>
    <copy tofile="${work.tomcat.installed.dir}/context.xml" file="${work.helper.dirname}/sakai-dispatch/META-INF/context.xml"/> 
  </target>
  
  <!-- Install the Sakai files for a particular underlying db store. -->
  
  <target name="installDbConf" >
  </target>

  <!-- allow configuring the local preference for the location of the sakai configuration files -->
	<!-- 
  <target name="modifyLocalConfigDir" 
	  description="modify the value of the directory holding sakai configuration information in relevant xml files." >
    <replace token="${sakai.configfilepathpattern}" value="${work.helper.dirname}"
	     dir="${work.helper.dirname}" includes="**/*.xml, **/*.properties" />
  </target>
  -->
	
	 <target name="modifyLocalConfigDir" 
		  description="modify the value of the directory holding sakai configuration information in relevant xml files." >
	    <replace token="${sakai.configfilepathpattern}" value="${work.helper.dirname}"
		     dir="${work.helper.dirname}" includes="**/*.xml" />
	  </target>


  <target name="adjustLocalFileReference" depends="setSyllabusSchemaUpdate">

    <replace summary="yes" token="${sakai.configfilepathpattern}" value="${work.helper.path}" 
	     dir="${work.tomcat.installed.dir}"
	     includes="**/*.xml"
	     excludes="**/work,**/samigo.xml"
	     />

    <replace summary="yes" token="${sakai.configfilepathpattern}" value="${work.helper.path}" 
	     dir="${work.helper.path}"
	     includes="**/*.xml"
	     excludes="**/work,**/samigo.xml"
	     />


    <!--  *.properties files require Unix-style paths.  Windows-style paths aren't parsed correctly. -->
    <!--    For example, if the Windows-style path is "c:\dev\QuickDemo\sakai", the Unix-style      -->
    <!--    path that the properties files need is "c:/dev/QuickDemo/sakai".  Java will properly    -->
    <!--    parse the Unix-style paths even though it looks wierd.                                   -->
    <path id="work.helper.path.tmp">
      <pathelement location="${work.helper.path}"/>
    </path>
    <pathconvert targetos="unix" property="work.helper.path.unixstyle" refid="work.helper.path.tmp" />
  	
    <replace summary="yes" token="${sakai.configfilepathpattern.withoutslash}" value="${work.helper.path.unixstyle}" 
	     dir="${work.tomcat.installed.dir}"
	     includes="**/*.properties"/>
  	
    <replace summary="yes" token="${sakai.configfilepathpattern.withoutslash}" value="${work.helper.path.unixstyle}" 
	     dir="${work.helper.path}"
	     includes="**/*.properties"/>

    <replace summary="yes" token="SAMIGODB_LOCAL_DIR" value="${work.helper.path.unixstyle}" 
  	     dir="${work.helper.path}"
  	     includes="**/samigo.xml"/>

  	
    <copy tofile="${work.tomcat.installed.dir}/conf/Catalina/localhost/sakai-dispatch.xml" 
	  file="${work.helper.path}/sakai-dispatch/META-INF/context.xml" />
    <copy tofile="${work.tomcat.installed.dir}/conf/Catalina/localhost/sakai-dav.xml" 
	  file="${work.tomcat.installed.dir}/webapps/sakai-dav/META-INF/context.xml" />
  </target>

  <!-- ========= customize Samigo ========= -->
  <target name="adjustLocalFileReferenceSamigo" depends="registerSamigo" >
    <!-- update the application context file -->
    <echo>work.tomcat.installed.dir: ${work.tomcat.installed.dir}</echo>
    <echo>work.helper.path: ${work.helper.path}</echo>
    <replace summary="yes" 
	     token="value>file:/opt/" 
			  value="value>file:${work.helper.path}opt/" 
				       dir="${work.tomcat.installed.dir}/webapps/samigo"
				       includes="**/applicationContext*.xml"/>

    <!-- fix security path and settings path -->
    <replace summary="yes" 
	     token="value>/opt/sa_forms/"
			  value="value>${work.helper.path}/opt/sa_forms/"
				       dir="${work.tomcat.installed.dir}webapps/samigo"
				       includes="**/web.xml"/>

    <replace summary="yes" 
	     token="value>/opt/j2ee/dev"
			  value="value>${work.helper.path}/opt/j2ee/dev"
				       dir="${work.tomcat.installed.dir}webapps/samigo"
				       includes="**/web.xml"/>

  </target>

  <target name="makeExecutible">
    <chmod dir="${work.rootdir}" perm="ugo+rx" includes="**/*.sh"/>
  </target>
  
  <target name="customizeSakai" description="run customizations for this sakai installation."  depends="adjustLocalFileReference, adjustLocalFileReferenceSamigo, makeExecutible"> 
    <echo> 
      Changing path to local Sakai files from: ${sakai.configfilepathpattern} to ${work.helper.path}. 
      The tomcat in use is: ${work.tomcat.installed.dir}.
    </echo>
  </target>

  <target name="registerSamigo" description="register the samigo tool">
    <!-- copy the registration files -->
  </target>

  <target name="adjustDbReferences" description="modify sakai.properties to allow for db.properties">

    <!-- turn off sql settings in sakai.properties -->
    <replaceregexp>
      <regexp pattern="^(\s*sql.*)" /> 
      <substitution expression="#\1" />
      <fileset dir="${work.helper.path}">
	<include name="sakai.properties" />
      </fileset>
    </replaceregexp>

    <!-- make sure that Sakai references db.properties for extra information -->
    <replaceregexp>
      <regexp pattern="cluster.properties" /> 
      <substitution expression="db.properties" />
      <fileset dir="${work.rootdir}">
	<include name="**/components.xml" />
      </fileset>
    </replaceregexp>

  </target>

<!--	  <target name="adjustLocalReferences" depends="installDbConf, adjustLocalFileReference,adjustLocalFileReferenceSamigo, makeExecutible, adjustDbReferences"/> -->
	  <target name="adjustLocalReferences" depends="installDbConf, adjustLocalFileReference,adjustLocalFileReferenceSamigo, makeExecutible"/>

  <!-- ========= HSQLDB customization entries =========- -->
  <target name="hsqldb" description="customize Sakai to use a local Hsqldb installation." depends="adjustLocalReferences">
    <replaceregexp flags="g">
      <regexp pattern="net.sf.hibernate.dialect.*Dialect" /> 
      <substitution expression="net.sf.hibernate.dialect.HSQLDialect" /> 
      <fileset dir="${work.tomcat.installed.dir}/webapps">
	<include name="**/components.xml" />
	<include name="**/hibernate.properties" />
	<exclude name="**/help" />
      </fileset>
    </replaceregexp>

    <!-- copy the hsql.properties file. -->
    <!--
    <copy tofile="${work.helper.path}/db.properties"
	  file="${work.helper.path}/hsqldb.properties" overwrite="true"
	  />
    -->
    <!-- copy the samigo.hsql.properties file. -->
    <copy tofile="${work.helper.path}/samigo.xml"
	  file="${work.helper.path}/samigo.hsqldb.xml" overwrite="true"
	  />

  <!-- use the right applicationContext.xml accordingly -->
    <copy file="${work.tomcat.installed.dir}/webapps/samigo/WEB-INF/classes/org/sakaiproject/spring/applicationContext_identity.xml"
          tofile="${work.tomcat.installed.dir}/webapps/samigo/WEB-INF/classes/org/sakaiproject/spring/applicationContext.xml"
          overwrite="true"
          verbose="true"
    />

    <!-- make sure to point to the local SAMIGO database -->
    <replace summary="yes" token="SAMIGODB_LOCAL_DIR" value="${work.helper.path}" 
	     dir="${work.helper.path}"
	     includes="**/samigo.xml"
	     />

  </target>

  <target name="setSyllabusSchemaUpdate" description="Set the value of the schemaUpdate parameter for Syllabus">
    <replaceregexp flags="s">
      <regexp pattern="(&quot;schemaUpdate&quot;&gt;.*&lt;value&gt;)true&lt;" /> 
      <substitution expression="\1false&lt;" /> 
      <fileset dir="${work.tomcat.installed.dir}/webapps/sakai-syllabus/WEB-INF" 	includes="components.xml" />
    </replaceregexp>
  </target>
  
  <!-- $Header: /cvs/quickstart/qs-1-5-1/customize.xml,v 1.21 2005/05/09 18:07:05 dlhaines.umich.edu Exp $ -->	
</project>

