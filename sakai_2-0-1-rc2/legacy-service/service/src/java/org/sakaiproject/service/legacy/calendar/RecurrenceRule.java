/**********************************************************************************
*
* $Header: /cvs/sakai2/legacy-service/service/src/java/org/sakaiproject/service/legacy/calendar/RecurrenceRule.java,v 1.1 2005/05/12 15:45:35 ggolden.umich.edu Exp $
*
***********************************************************************************
*
* Copyright (c) 2003, 2004 The Regents of the University of Michigan, Trustees of Indiana University,
*                  Board of Trustees of the Leland Stanford, Jr., University, and The MIT Corporation
* 
* Licensed under the Educational Community License Version 1.0 (the "License");
* By obtaining, using and/or copying this Original Work, you agree that you have read,
* understand, and will comply with the terms and conditions of the Educational Community License.
* You may obtain a copy of the License at:
* 
*      http://cvs.sakaiproject.org/licenses/license_1_0.html
* 
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
* INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
* AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
* DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING 
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*
**********************************************************************************/

// package
package org.sakaiproject.service.legacy.calendar;

// import
import java.util.List;
import java.util.Stack;
import java.util.TimeZone;

import org.sakaiproject.service.legacy.time.Time;
import org.sakaiproject.service.legacy.time.TimeRange;
import org.w3c.dom.Document;
import org.w3c.dom.Element;

/**
* <p>RecurrenceRule is the interface for objects which add or remove multiple occurrences of timeranges.</p>
*
* @author University of Michigan, CHEF Software Development Team
* @version $Revision$
*/
public interface RecurrenceRule
{
	/**
	 * Take values from this xml element
	 * @param el The xml element.
	 */
	void set(Element el);

	/**
	 * Serialize the resource into XML, adding an element to the doc under the top of the stack element.
	 * @param doc The DOM doc to contain the XML (or null for a string return).
	 * @param stack The DOM elements, the top of which is the containing element of the new "resource" element.
	 * @return The newly added element.
	 */
	Element toXml(Document doc, Stack stack);

	/**
	 * Return a List of all RecurrenceInstance objects generated by this rule within the given time range, based on the
	 * prototype first range, in time order.
	 * @param prototype The prototype first TimeRange.
	 * @param range A time range to limit the generated ranges.
	 * @return a List of RecurrenceInstance generated by this rule in this range.
	 */
	List generateInstances(TimeRange prototype, TimeRange range, TimeZone timeZone);

	/**
	 * Remove from the ranges list any RecurrenceInstance excluded by this rule.
	 * @param ranges The list (RecurrenceInstance) of ranges.
	 */
	void excludeInstances(List ranges);


	/**
	 * Access a short text describing the rule's frequency.
	 * @return A frequency description.
	 */
	String getFrequencyDescription();

	/**
	 * Access the end time for recurring events.
	 * @return The end time for recurring events.
	 */
	Time getUntil();

	/**
	 * Access the number of times that this event should repeat.
	 * @return The number of times that this event should repeat.
	 */
	int getCount();

	/**
	 * Access the number of natural frequency units between repeats.
	 * @return The number of natural frequency units between repeats.
	 */
	int getInterval();
}

/**********************************************************************************
*
* $Header: /cvs/sakai2/legacy-service/service/src/java/org/sakaiproject/service/legacy/calendar/RecurrenceRule.java,v 1.1 2005/05/12 15:45:35 ggolden.umich.edu Exp $
*
**********************************************************************************/
