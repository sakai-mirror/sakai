Should you be here?
-------------------

Unless you're a developer working on the Gradebook project, probably not yet.
The project is in a rapid development phase. By sheer luck, it's possible
that you'll be able to check code out of CVS, build it, and run it. But this
should be considered For Entertainment Purposes only until we're ready to
deliver a beta release to QA.


Where are you?
--------------

The xdocs directory contains user-generated documentation.  Javadocs and test
reports generated by maven are located in target/docs


Building the gradebook standalone
---------------------------------

0) Until Sakai 2.0 is released and your usual Maven repositories have the
required Sakai 2.0 libraries, you'll still need to do a Sakai build to get
them. Start at the top directory and run "maven sakai2".

1) Edit gradebook/tool/project.properties to match your build environment

2) Make sure that the sakaigb database (or whatever you want to called it in
your hibernate.properties file) has been created.

3) Running 'maven -Dstandalone=true' from the top level project directory
(currently /sakai2/gradebook/ in cvs) will clean, compile, run some tests, and
deploy the webapp.

4) If you want, you can then set up the database and load it with test data
by changing to the 'tool' subdirectory and running
'maven -Dstandalone=true load-full'.


Looking at the gradebook
------------------------

With the default settings, deployed to a default test Tomcat server, you can
point your browser to:

http://localhost:8080/sakai-gradebook-tool/

Pick a role to play and go from there.


Running Additional Tests
------------------------

These tests rely on other gradebook projects (namely service and repo), so you
should run the default maven goal from the /gradebook/gb directory prior to
running any of these goals.

* Export and execute the database schema (from /gradebook/gb/tool):
maven -Dstandalone=true schema

Note: The ddl is saved in /gradebook/gb/tool/target/schema/

* Recreate the database and populate it with a set of pre-defined gradebooks (from /gradebook/gb/tool):
maven -Dstandalone=true load-full

If you want to only create some gradebooks and assignments (without any users or grades):
maven -Dstandalone=true load-gradebooks.

* Run the database CRUD tests (from /gradebook/gb/tool):
maven -Dstandalone=true test-managers

Note: these tests intentionally do _not_ follow the **/*.Test.java naming convention.
They should not be run during the normal maven test goal, since they drop the
database tables and populate them with test data.

* Recreate the database, populate it with test data, and run business logic
tests (from /gradebook/gb/tool):
maven -Dstandalone=true load-full test-standalone
