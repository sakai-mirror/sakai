<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springkernel.org/dtd/spring-beans.dtd">

<beans>

	<bean id="org.sakaiproject.service.legacy.alias.AliasService"
			class="org.sakaiproject.component.legacy.alias.DbAliasService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.announcement.AnnouncementService"
			class="org.sakaiproject.component.legacy.announcement.DbAnnouncementService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="notificationService"><ref bean="org.sakaiproject.service.legacy.notification.NotificationService"/></property>
 		<property name="containerTableName"><value>ANNOUNCEMENT_CHANNEL</value></property>
 		<property name="resourceTableName"><value>ANNOUNCEMENT_MESSAGE</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.archive.ArchiveService"
			class="org.sakaiproject.component.legacy.archive.BasicArchiveService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
 		<property name="serverConfigurationService"><ref bean="org.sakaiproject.service.framework.config.ServerConfigurationService"/></property>
 		<property name="storagePath"><value>${sakai.home}archive/</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.assignment.AssignmentService"
			class="org.sakaiproject.component.legacy.assignment.DbAssignmentService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="assignmentTableName"><value>ASSIGNMENT_ASSIGNMENT</value></property>
 		<property name="contentTableName"><value>ASSIGNMENT_CONTENT</value></property>
 		<property name="submissionTableName"><value>ASSIGNMENT_SUBMISSION</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.api.common.authentication.AuthenticationManager"
			class="org.sakaiproject.component.common.authentication.LegacyAuthnComponent"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
	</bean>

	<bean id="org.sakaiproject.service.legacy.calendar.CalendarService"
			class="org.sakaiproject.component.legacy.calendar.DbCalendarService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="idService"><ref bean="org.sakaiproject.service.legacy.id.IdService"/></property>
 		<property name="containerTableName"><value>CALENDAR_CALENDAR</value></property>
 		<property name="resourceTableName"><value>CALENDAR_EVENT</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.calendar.CalendarImporterService"
			class="org.sakaiproject.component.legacy.calendar.GenericCalendarImporter"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="calendarService"><ref bean="org.sakaiproject.service.legacy.calendar.CalendarService"/></property>
		<property name="timeService"><ref bean="org.sakaiproject.service.legacy.time.TimeService"/></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.chat.ChatService"
			class="org.sakaiproject.component.legacy.chat.DbChatService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="containerTableName"><value>CHAT_CHANNEL</value></property>
 		<property name="resourceTableName"><value>CHAT_MESSAGE</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.content.ContentHostingService"
			class="org.sakaiproject.component.legacy.content.DbContentService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="notificationService"><ref bean="org.sakaiproject.service.legacy.notification.NotificationService"/></property>
		<property name="serverConfigurationService"><ref bean="org.sakaiproject.service.framework.config.ServerConfigurationService"/></property>
 		<property name="collectionTableName"><value>CONTENT_COLLECTION</value></property>
 		<property name="resourceTableName"><value>CONTENT_RESOURCE</value></property>
 		<property name="resourceBodyTableName"><value>CONTENT_RESOURCE_BODY_BINARY</value></property>
 		<property name="locksInDb"><value>false</value></property>
		<property name="bodyPath"><null/></property>
		<property name="bodyVolumes"><null/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
 		<property name="siteQuota"><value>1048576</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.content.ContentTypeImageService"
			class="org.sakaiproject.component.legacy.content.BasicContentTypeImageService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
 		<property name="imageFile"><value>content_type_images.properties</value></property>
 		<property name="nameFile"><value>content_type_names.properties</value></property>
 		<property name="extensionFile"><value>content_type_extensions.properties</value></property>
	</bean>
		
	<bean id="org.sakaiproject.service.legacy.coursemanagement.CourseManagementService"
			class="org.sakaiproject.component.legacy.coursemanagement.BasicCourseManagementService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="provider"><ref bean="org.sakaiproject.service.legacy.coursemanagement.CourseManagementProvider"/></property>
	</bean>

	<bean id="org.sakaiproject.service.framework.cluster.ClusterService"
			class="org.sakaiproject.component.framework.cluster.SakaiClusterService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="serverConfigurationService"><ref bean="org.sakaiproject.service.framework.config.ServerConfigurationService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="eventTrackingService"><ref bean="org.sakaiproject.service.legacy.event.EventTrackingService"/></property>
 		<property name="usageSessionService"><ref bean="org.sakaiproject.service.framework.session.UsageSessionService"/></property>
		<property name="threadLocalManager"><ref bean="org.sakaiproject.api.kernel.thread_local.ThreadLocalManager"/></property>
 		<property name="refresh"><value>60</value></property>
 		<property name="expired"><value>600</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.framework.courier.CourierService"
			class="org.sakaiproject.component.framework.courier.BasicCourierService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.discussion.DiscussionService"
			class="org.sakaiproject.component.legacy.discussion.DbDiscussionService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="containerTableName"><value>DISCUSSION_CHANNEL</value></property>
 		<property name="resourceTableName"><value>DISCUSSION_MESSAGE</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.digest.DigestService"
			class="org.sakaiproject.component.legacy.digest.DbDigestService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="timeService"><ref bean="org.sakaiproject.service.legacy.time.TimeService"/></property>
 		<property name="tableName"><value>SAKAI_DIGEST</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.framework.email.EmailService"
			class="org.sakaiproject.component.framework.email.BasicEmailService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="smtp"><null/></property>
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
	</bean>

	<!-- for testing email - comment out the BasicEmailService and use this
	<bean id="org.sakaiproject.service.framework.email.EmailService"
			class="org.sakaiproject.component.framework.email.TestEmailService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
	</bean>
	-->

	<bean id="org.sakaiproject.service.legacy.event.EventTrackingService"
			class="org.sakaiproject.component.legacy.event.ClusterEventTracking"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="serverConfigurationService"><ref bean="org.sakaiproject.service.framework.config.ServerConfigurationService"/></property>
		<property name="timeService"><ref bean="org.sakaiproject.service.legacy.time.TimeService"/></property>
 		<property name="checkDb"><value>true</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

  <!-- Alternate EventTrackingService implementation (no database required) -->
  <!-- 
  <bean id="org.sakaiproject.service.legacy.event.EventTrackingService"
    class="org.sakaiproject.component.legacy.event.JGroupsClusterEventTracking"
    init-method="init" destroy-method="destroy">
    <property name="logger">
      <ref bean="org.sakaiproject.service.framework.log.Logger" />
    </property>
  </bean>
  -->

  <bean
  	id="org.sakaiproject.service.legacy.archive.ImportMetadataService"
  	class="org.sakaiproject.component.legacy.archive.ImportMetadataServiceImpl">
  </bean>

  <bean id="org.sakaiproject.service.framework.log.Logger"
			class="org.sakaiproject.component.framework.log.CommonsLogger"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
	</bean>

	<!-- Note: dependency on legacy -ggolden -->
	<bean id="org.sakaiproject.service.framework.memory.MemoryService"
			class="org.sakaiproject.component.framework.memory.BasicMemoryService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
 		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
 		<property name="eventTrackingService"><ref bean="org.sakaiproject.service.legacy.event.EventTrackingService"/></property>
 		<property name="cacheLogging"><value>false</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.news.NewsService"
			class="org.sakaiproject.component.legacy.news.BasicNewsService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.notification.NotificationService"
			class="org.sakaiproject.component.legacy.notification.DbNotificationService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="eventTrackingService"><ref bean="org.sakaiproject.service.legacy.event.EventTrackingService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="tableName"><value>SAKAI_NOTIFICATION</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.email.MailArchiveService"
			class="org.sakaiproject.component.legacy.email.DbMailArchiveService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="notificationService"><ref bean="org.sakaiproject.service.legacy.notification.NotificationService"/></property>
 		<property name="containerTableName"><value>MAILARCHIVE_CHANNEL</value></property>
 		<property name="resourceTableName"><value>MAILARCHIVE_MESSAGE</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.framework.portal.PortalService"
			class="org.sakaiproject.component.framework.portal.BasicPortalService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="currentService"><ref bean="org.sakaiproject.service.framework.current.CurrentService"/></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.preference.PreferencesService"
			class="org.sakaiproject.component.legacy.preference.DbPreferencesService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="memoryService"><ref bean="org.sakaiproject.service.framework.memory.MemoryService"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="tableName"><value>SAKAI_PREFERENCES</value></property>
 		<property name="locksInDb"><value>false</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.presence.PresenceService"
			class="org.sakaiproject.component.legacy.presence.ClusterPresenceService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="eventTrackingService"><ref bean="org.sakaiproject.service.legacy.event.EventTrackingService"/></property>
		<property name="usageSessionService"><ref bean="org.sakaiproject.service.framework.session.UsageSessionService"/></property>
		<property name="userDirectoryService"><ref bean="org.sakaiproject.service.legacy.user.UserDirectoryService"/></property>
 		<property name="timeoutSeconds"><value>60</value></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.realm.RealmService"
			class="org.sakaiproject.component.legacy.realm.DbRealmService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="provider"><ref bean="org.sakaiproject.service.legacy.realm.RealmProvider"/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.security.SecurityService"
			class="org.sakaiproject.component.legacy.security.SakaiSecurity"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
 		<property name="cacheMinutes"><value>0</value></property>
	</bean>

	<bean id="org.sakaiproject.service.framework.config.ServerConfigurationService"
			class="org.sakaiproject.component.framework.config.BasicConfigurationService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>

		<property name="properties">
			<props>
				<prop key="serverId">localhost</prop>
				<prop key="serverUrl">http://localhost:8080</prop>
				<prop key="serverName">localhost</prop>

				<prop key="gatewaySiteId">!gateway</prop>
 				<prop key="loginUrl">/portal/login</prop>
 				<prop key="loggedOutUrl">/portal</prop>
 				<prop key="accessPath">/access</prop>
 				<prop key="portalPath">/portal</prop>
 				<prop key="helpPath">/help</prop>

				<prop key="helpEnabled">true</prop>

				<prop key="top.login">true</prop>

				<prop key="container.login">false</prop>

				<prop key="email-for-user-id">false</prop>

				<prop key="java.beep">false</prop>

				<prop key="bottom.copyrighttext">(c) 2003, 2004, 2005 sakaiproject.org. All rights reserved.</prop>

				<prop key="version.service">2.0.1-rc3</prop>
				<prop key="version.sakai">2.0.1-rc3</prop>

				<prop key="server.info.url">/library/content/server_info.html</prop>
				<prop key="myworkspace.info.url">/library/content/myworkspace_info.html</prop>
				<prop key="webcontent.instructions.url">/library/content/webcontent_instructions.html</prop>

				<prop key="display.users.present">false</prop>

				<!-- this is the default skin -->
				<prop key="skin.default">default</prop>
				
				<!-- this is the path to the skin repository -->
				<prop key="skin.repo">/library/skin</prop>
				
				<prop key="copyrighttype.count">6</prop>
				<prop key="copyrighttype.1">Material is in public domain.</prop>
				<prop key="copyrighttype.2">I hold copyright.</prop>
				<prop key="copyrighttype.3">Material is subject to fair use exception.</prop>
				<prop key="copyrighttype.4">I have obtained permission to use this material.</prop>
				<prop key="copyrighttype.5">Copyright status is not yet determined.</prop>
				<prop key="copyrighttype.6">Use copyright below</prop>
				<prop key="copyrighttype.own">I hold copyright.</prop>
				<prop key="copyrighttype.new">Use copyright below</prop>
				<prop key="default.copyright">I hold copyright.</prop>
				<prop key="default.copyright.alert">true</prop>
				<prop key="fairuse.url">http://fairuse.stanford.edu</prop>
				<prop key="newcopyrightinput">true</prop>
				
				<prop key="activeInactiveUser">true</prop>
				
				<prop key="termterm.count">11</prop>
				<prop key="termterm.1">FALL</prop>
				<prop key="termterm.2">WINTER</prop>
				<prop key="termterm.3">SPRING</prop>
				<prop key="termterm.4">SPRING_SUMMER</prop>
				<prop key="termterm.5">SUMMER</prop>
				<prop key="termterm.6">FALL</prop>
				<prop key="termterm.7">WINTER</prop>
				<prop key="termterm.8">SPRING</prop>
				<prop key="termterm.9">SPRING_SUMMER</prop>
				<prop key="termterm.10">SUMMER</prop>
				<prop key="termterm.11">FALL</prop>
				
				<prop key="termyear.count">11</prop>
				<prop key="termyear.1">2003</prop>
				<prop key="termyear.2">2004</prop>
				<prop key="termyear.3">2004</prop>
				<prop key="termyear.4">2004</prop>
				<prop key="termyear.5">2004</prop>
				<prop key="termyear.6">2004</prop>
				<prop key="termyear.7">2005</prop>
				<prop key="termyear.8">2005</prop>
				<prop key="termyear.9">2005</prop>
				<prop key="termyear.10">2005</prop>
				<prop key="termyear.11">2005</prop>
				
				<prop key="termlistabbr.count">11</prop>
				<prop key="termlistabbr.1">F03</prop>
				<prop key="termlistabbr.2">W04</prop>
				<prop key="termlistabbr.3">Sp04</prop>
				<prop key="termlistabbr.4">SpSu04</prop>
				<prop key="termlistabbr.5">Su04</prop>
				<prop key="termlistabbr.6">F04</prop>
				<prop key="termlistabbr.7">W05</prop>
				<prop key="termlistabbr.8">Sp05</prop>
				<prop key="termlistabbr.9">SpSu05</prop>
				<prop key="termlistabbr.10">Su05</prop>
				<prop key="termlistabbr.11">F05</prop>
				
				<prop key="termiscurrent.count">11</prop>
				<prop key="termiscurrent.1">false</prop>
				<prop key="termiscurrent.2">false</prop>
				<prop key="termiscurrent.3">false</prop>
				<prop key="termiscurrent.4">false</prop>
				<prop key="termiscurrent.5">false</prop>
				<prop key="termiscurrent.6">false</prop>
				<prop key="termiscurrent.7">false</prop>
				<prop key="termiscurrent.8">true</prop>
				<prop key="termiscurrent.9">false</prop>
				<prop key="termiscurrent.10">false</prop>
				<prop key="termiscurrent.11">false</prop>
				
				<prop key="termstarttime.count">11</prop>
				<prop key="termstarttime.1">20030901000000000</prop>
				<prop key="termstarttime.2">20040101000000000</prop>
				<prop key="termstarttime.3">20040501000000000</prop>
				<prop key="termstarttime.4">20040515000000000</prop>
				<prop key="termstarttime.5">20040801000000000</prop>
				<prop key="termstarttime.6">20040901000000000</prop>
				<prop key="termstarttime.7">20050101000000000</prop>
				<prop key="termstarttime.8">20050501000000000</prop>
				<prop key="termstarttime.9">20050515000000000</prop>
				<prop key="termstarttime.10">20050801000000000</prop>
				<prop key="termstarttime.11">20050901000000000</prop>
				
				<prop key="termendtime.count">11</prop>
				<prop key="termendtime.1">20031201000000000</prop>
				<prop key="termendtime.2">20040501000000000</prop>
				<prop key="termendtime.3">20040801000000000</prop>
				<prop key="termendtime.4">20040801000000000</prop>
				<prop key="termendtime.5">20040801000000000</prop>
				<prop key="termendtime.6">20041201000000000</prop>
				<prop key="termendtime.7">20050501000000000</prop>
				<prop key="termendtime.8">20050801000000000</prop>
				<prop key="termendtime.9">20050801000000000</prop>
				<prop key="termendtime.10">20050801000000000</prop>
				<prop key="termendtime.11">20051201000000000</prop>
				
				<prop key="subjectsize">8</prop>
				<prop key="coursesize">3</prop>
				<prop key="sectionsize">3</prop>
				
				<!-- for worksite setup, which offers a list of Appearance (Icon) choices (course sites only) -->
				<prop key="iconNames.count">3</prop>
				<prop key="iconNames.1">humanities</prop>
				<prop key="iconNames.2">engineering</prop>
				<prop key="iconNames.3">pig</prop>

				<prop key="iconUrls.count">3</prop>
				<prop key="iconUrls.1">/library/icon/humanities.gif</prop>
				<prop key="iconUrls.2">/library/icon/engineering.gif</prop>
				<prop key="iconUrls.3">/library/icon/pig.gif</prop>

				<prop key="iconSkins.count">3</prop>
				<prop key="iconSkins.1"></prop>
				<prop key="iconSkins.2"></prop>
				<prop key="iconSkins.3">examp-u</prop>

				<prop key="noEmailInIdAccountName">username</prop>
				<prop key="noEmailInIdAccountLabel">Username(s)</prop>
				
				<prop key="emailInIdAccountName">guest</prop>
				<prop key="emailInIdAccountLabel">Guest(s) Email Address (external participants, e.g. jdoe@yahoo.com)</prop>
				<!--<prop key="emailInIdAccountNotifyPassword">true</prop>-->
				<!--<prop key="invalidEmailInIdAccountString">nowhere.org</prop>-->
				<!--<prop key="emailInIdAccount.url"></prop>-->
				<!-- emailInIdAccount login instruction account login instructions -->
				<prop key="emailInIdAccountInstru">To log in, you must first get a guest account. A guest account is a special kind of account that is used to give non-Sakai University members access to the general Sakai University web environment. The Sakai University web environment includes many tools and services, one of which is Sakai. </prop>
				
				<prop key="titleEditableSiteType.count">1</prop>
				<prop key="titleEditableSiteType.1">project</prop>
				
				<prop key="roster.available.weeks.before.term.start">4</prop>
				
				<prop key="courseSiteType">course</prop>
				
				<prop key="editViewRosterSiteType.count">1</prop>
				<prop key="editViewRosterSiteType.1">project</prop>
				
				<prop key="sitebrowser.termsearch.type">course</prop>
				<prop key="sitebrowser.termsearch.property">term</prop>
				<prop key="sitesearch.noshow.sitetype"></prop>

				<prop key="support.email"></prop>

				<!-- email support address used in incoming email rejection messages -->
				<prop key="mail.support"></prop>

				<!-- dns addresses used by James for incoming email -->
				<prop key="smtp.dns.1"></prop>
				<prop key="smtp.dns.2"></prop>

				<!-- SMTP port on which James runs --> 
				<prop key="smtp.port"></prop>

				<!-- flag to enable or disable James for incoming email (true | false) -->
				<prop key="smtp.enabled">false</prop>

				<!--worksite setup requests email from address-->
				<!--<prop key="setup.request"></prop>-->

				<!-- powered by config for the bottom of the portal -->
				<prop key="powered.url.count">1</prop>
				<prop key="powered.url.1">http://sakaiproject.org</prop>
				<prop key="powered.img.count">1</prop>
				<prop key="powered.img.1">/library/image/sakai_powered.gif</prop>
				<prop key="powered.alt.count">1</prop>
				<prop key="powered.alt.1">Powered by Sakai</prop>

				<!-- send an email to the user when the user is added -->
				<prop key="notifyNewUserEmail">true</prop>
				
				<!-- some fill-ins for the css/vm ui (Worksite Setup, Digest Service, Email notification, Worksite Setup, Contact Support, Portal) -->
				<prop key="ui.institution">Sakai University</prop>
				<prop key="ui.service">Sakai</prop>
				<prop key="serverUrl">http://www.sakaiproject.org</prop>
				
			</props>
		</property>

 		<property name="registrationPath"><value>registration.xml</value></property>
		<property name="toolOrderFile"><value>toolOrder.xml</value></property>

	</bean>

	<bean id="org.sakaiproject.service.legacy.site.SiteService"
			class="org.sakaiproject.component.legacy.site.DbSiteService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

	<bean id="org.sakaiproject.service.framework.sql.SqlService"
	  class="org.sakaiproject.component.framework.sql.BasicSqlService"
	  init-method="init" destroy-method="destroy" singleton="true">

    <property name="defaultDataSource">
      <ref bean="javax.sql.DataSource" />
    </property>

    <property name="longDataSource">
      <ref bean="javax.sql.LongDataSource" />
    </property>

	  <property name="autoDdl"><value>${auto.ddl}</value></property>
	  <property name="commitAfterRead">
	    <value>false</value>
	  </property>

	  <!-- HSQLDB configuration -->
	  <property name="vendor">
	    <value>hsqldb</value>
	  </property>

	  <!-- MySQL configuration -->
	  <!--
	    <property name="vendor"><value>mysql</value></property>
	  -->

	  <!-- Oracle configuration -->
	  <!--
	    <property name="vendor"><value>oracle</value></property>
	  -->
	</bean>

	<bean id="org.sakaiproject.service.legacy.time.TimeService"
			class="org.sakaiproject.component.legacy.time.BasicTimeService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
	</bean>

	<bean id="org.sakaiproject.service.legacy.user.UserDirectoryService"
			class="org.sakaiproject.component.legacy.user.DbUserService"
			init-method="init"
			destroy-method="destroy"
			singleton="true">
		<property name="logger"><ref bean="org.sakaiproject.service.framework.log.Logger"/></property>
		<property name="sqlService"><ref bean="org.sakaiproject.service.framework.sql.SqlService"/></property>
		<property name="provider"><ref bean="org.sakaiproject.service.legacy.user.UserDirectoryProvider"/></property>
 		<property name="autoDdl"><value>${auto.ddl}</value></property>
	</bean>

</beans>
