import java.util.Date;

import org.sakaiproject.api.kernel.session.Session;
import org.sakaiproject.api.kernel.session.cover.SessionManager;

import org.sakaiproject.service.legacy.user.User;
import org.sakaiproject.service.legacy.user.cover.UserDirectoryService;

import org.sakaiproject.service.framework.config.cover.ServerConfigurationService;

/**
 * class to support Sakai Login headers sent in request as a string array
 */
public class SakaiLogin {

    public String login(String id,String pw) {

	boolean allowLogin = ServerConfigurationService.getBoolean("webservices.allowlogin", false);

	System.out.println("login id="+id+" pw="+pw+" allowLogin="+allowLogin));

	if ( ! allowLogin ) {
		throw new AxisFault("Web Services Login Disabled");
	}

        User user = UserDirectoryService.authenticate(id,pw);
	if ( user != null ) {
		System.out.println("Have User");
                Session s = SessionManager.startSession();
                if (s == null)
                {
                        System.out.println("no session established");
                        throw new AxisFault("Unable to establish session");
                }
                else
                {
			s.setUserId(id);
			s.setUserEid(id);
                        System.out.println("session: " + s.getId()
                                + " user id: " + s.getUserId()
                                + " user enterprise id: " + s.getUserEid()
                                + " started: " + new Date(s.getCreationTime()).toLocaleString()
                                + " accessed: " + new Date(s.getLastAccessedTime()).toLocaleString()
                                + " inactive after: " + s.getMaxInactiveInterval());
			return s.getId();
                }
	}
        throw new AxisFault("Unable to login");
    }
}
