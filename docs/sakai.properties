# sakai.properties - documentation

# identify your application server with a short name, unique among the servers in your cluster.
# choose a server id even if you are running a single app server
serverId=localhost

# the URL to the server, including transport, DNS name, and port, if any
serverUrl=http://localhost:8080

# the DNS name of the server
serverName=localhost

# the URL to send folks to after they logout
loggedOutUrl=/portal

# the default skin name, and the URL path (relative is ok) to the collection of skins
skin.default=default
skin.repo=/library/skin

# the database configuration (hsqldb, mysql or oracle) [ make sure to modify to match your particular setup ]
vendor@org.sakaiproject.service.framework.sql.SqlService=hsqldb
#vendor@org.sakaiproject.service.framework.sql.SqlService=mysql
#vendor@org.sakaiproject.service.framework.sql.SqlService=oracle

driverClassName@javax.sql.BaseDataSource=org.hsqldb.jdbcDriver
#driverClassName@javax.sql.BaseDataSource=com.mysql.jdbc.Driver
#driverClassName@javax.sql.BaseDataSource=oracle.jdbc.driver.OracleDriver

# two hsqldb: first for in-memory (no persistence between runs), second for disk based
#url@javax.sql.BaseDataSource=jdbc:hsqldb:.
url@javax.sql.BaseDataSource=jdbc:hsqldb:${sakai.home}/db/sakai.db
#url@javax.sql.BaseDataSource=jdbc:mysql://127.0.0.1:3306/sakai?useUnicode=true&amp;characterEncoding=UTF-8
#url@javax.sql.BaseDataSource=jdbc:oracle:thin:@your.oracle.dns:1521:SID

username@javax.sql.BaseDataSource=sa
password@javax.sql.BaseDataSource=

validationQuery@javax.sql.BaseDataSource=select 1 from SYSTEM_USERS

# this is good for both mysql and oracle
#validationQuery@javax.sql.BaseDataSource=select 1 from DUAL

# enable presence display in the portal (true or false)
display.users.present=false

# smtp server for outgoing emails
smtp@org.sakaiproject.service.framework.email.EmailService=some.smtp.org

# dns addresses used by James for incoming email
smtp.dns.1 = 255.255.255.1
smtp.dns.2 = 255.255.255.2

# SMTP port on which James runs.  Default is 25.  Recommend running on 8025, and using a standard mailer on 25 to forward mail to Sakai.
smtp.port = 8025

# flag to enable or disable James for incoming email (true | false)
smtp.enabled = false

# upload limit per request, in megs
content.upload.max=20

# links placed on the bottom nav - set the .count to the number of items, then add each item
bottomnav.count = 2
bottomnav.1 = <a href="https://localhost/portal/site/!gateway">Gateway</a>
bottomnav.2 = <a href="http://sakaiproject.org/cms" target="_blank">The Sakai Project</a>

# some fill-ins for the css/vm ui (Worksite Setup, Digest Service, Email notification, Worksite Setup, Contact Support, Portal)
ui.institution = Your Institution
ui.service = SakaiOrWhatever

# minutes to cache each security question in the SecurityService - set to 0 to disable caching.
cacheMinutes@org.sakaiproject.service.legacy.security.SecurityService = 3

# minutes to cache each site (site, page, tool) access in the SiteService - set to 0 to disable caching.
cacheMinutes@org.sakaiproject.service.legacy.site.SiteService = 3

# sessions expire if nothing happens in this many seconds (1 hour)
inactiveInterval@org.sakaiproject.api.kernel.session.SessionManager=3600

# presence expires if not refreshed in this many seconds
timeoutSeconds@org.sakaiproject.service.legacy.presence.PresenceService=60

# root of archive file system area - used to write archive files and to read them
# when clustering app servers, this should be a shared network location
storagePath@org.sakaiproject.service.legacy.archive.ArchiveService = ${sakai.home}/archive/

#copyright text to appear in the bottom area of each web page.
bottom.copyrighttext=(c) 2003, 2004, 2005 sakaiproject.org. All rights reserved.

# to let the container handle login or not (set to true for single-signon type setups, false for just internal login)
container.login = false

# the file system root for content hosting's external stored files (default is null, i.e. store them in the db)
# see the readme file (2.2.7 File Based Content Hosting) for more details
#bodyPath@org.sakaiproject.service.legacy.content.ContentHostingService = /someplace/

# when storing content hosting's body bits in files, an optional set of folders just within the bodyPath -
# to act as volumes to distribute the files among - a comma separate list of folders.  If left out, no volumes will be used.
# see the readme file (2.2.7 File Based Content Hosting) for more details
#bodyVolumes@org.sakaiproject.service.legacy.content.ContentHostingService = vol1, vol2, vol3

# to disable list of appreance/icon with "edit site information" for course sites. (set as true to display only default appearance)
#disable.course.site.skin.select=true

# force all URLs out of Sakai back to Sakai to be secure, i.e. to use https, on this port.  Leave out to respond with the same transport as the request.
#  Otherwise, the URLs will reflect the attributes of the request URL. (443 | 8443 | or any other port) [defaults to missing]
#force.url.secure=443

#to run JGroups across subnets sending multiple unicast messages
#props@org.sakaiproject.service.legacy.event.EventTrackingService=TCP(start_port=7800):\
#    TCPPING(initial_hosts=localhost[7800];port_range=5;timeout=3000;num_initial_members=3;up_thread=true;down_thread=true):\
#    pbcast.NAKACK(down_thread=true;up_thread=true;gc_lag=100;retransmit_timeout=3000):\
#    VERIFY_SUSPECT(timeout=1500;down_thread=false;up_thread=false):\
#    pbcast.STABLE(desired_avg_gossip=20000):\
#    pbcast.GMS(join_timeout=5000;join_retry_timeout=2000;shun=false;print_local_addr=false;down_thread=true;up_thread=true)
