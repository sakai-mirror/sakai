
**** WORKING ORACLE QUERIES ****

Breakdown (counts) of events for a time period:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\event_breakdown.txt
SELECT event AS event_name, COUNT(*) AS event_count
FROM chef_event_archive
WHERE
event_date >= '01-JAN-05' AND event_date < '01-FEB-05'
AND NOT (event='content.read' AND ref LIKE '/content/public/%')
GROUP BY event
ORDER BY event_count DESC;
SPOOL OFF

All events per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\allevents_per_hour.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, event AS event_name, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE
event_date >= '01-JAN-05' AND event_date < '01-FEB-05'
AND NOT (event='content.read' AND ref LIKE '/content/public/%')
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24'), event
ORDER BY event_time, event;
SPOOL OFF

All events per day:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\allevents_per_day.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD') AS event_time, event AS event_name, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE
event_date >= '01-JAN-05' AND event_date < '01-MAY-05'
AND NOT (event='content.read' AND ref LIKE '/content/public/%')
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD'), event
ORDER BY event_time, event;
SPOOL OFF

Login events per minute:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\logins_per_minute.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24:MI')||':00' AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='user.login' 
AND event_date >= '18-JAN-05' AND event_date <= '21-JAN-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24:MI') 
ORDER BY event_time;
SPOOL OFF


Login events per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\logins_per_hour.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='user.login' 
AND event_date >= '01-JAN-05' AND event_date <= '31-JAN-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24') 
ORDER BY event_time;
SPOOL OFF

Login events per day:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\logins_per_day.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD') AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='user.login' 
AND event_date >= '01-JAN-05' AND event_date <= '01-MAY-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD') 
ORDER BY event_time;
SPOOL OFF

Logout events per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\logouts_per_hour.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='user.login' 
AND event_date >= '01-JAN-05' AND event_date <= '31-JAN-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24') 
ORDER BY event_time;
SPOOL OFF

Logout events per day:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\logouts_per_day.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD') AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='user.login' 
AND event_date >= '01-JAN-05' AND event_date <= '01-MAY-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD') 
ORDER BY event_time;
SPOOL OFF

uploads and downloads (content.XXXX) per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\content_per_hour.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, event AS event_name, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE 
event_date >= '01-JAN-05' AND event_date <= '01-FEB-05'
AND (event='content.read' OR event='content.new' OR event='content.revise' or event='content.delete')
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24'), event
ORDER BY event_time, event_name;
SPOOL OFF

uploads and downloads (content.XXXX) per day:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\content_per_day.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD') AS event_day, event AS event_name, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE 
event_date >= '01-JAN-05' AND event_date <= '01-MAY-05'
AND (event='content.read' OR event='content.new' OR event='content.revise' OR event='content.delete')
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD'), event
ORDER BY event_day, event_name;
SPOOL OFF

Site creation (site.add) events per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\sitescreated_per_hour.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='site.add' 
AND event_date >= '01-JAN-05' AND event_date <= '31-JAN-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24') 
ORDER BY event_time;
SPOOL OFF

Site creation (site.add) events per day:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\sitescreated_per_day.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD') AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE event='site.add' 
AND event_date >= '01-JAN-05' AND event_date <= '01-MAY-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD') 
ORDER BY event_time;
SPOOL OFF

Sessions starting per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\sessions_per_hour.txt
SELECT TO_CHAR(session_start,'YYYY-MM-DD HH24')||':00:00' AS event_time, COUNT(*) AS session_count 
FROM chef_session_archive
WHERE session_start <> session_end AND session_end > session_start
AND session_start >= '01-JAN-05' AND session_start <= '01-MAY-05'
GROUP BY TO_CHAR(session_start,'YYYY-MM-DD HH24') 
ORDER BY event_time;
SPOOL OFF

# of events per minute (with min, max, median):
SET PAGESIZE 30000
SPOOL c:\dev\analysis\events_per_seconds.txt
SELECT MIN(event_count), MEDIAN(event_count), MAX(event_count) FROM (
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24:MI')||':00' AS event_time, COUNT(*) AS event_count
FROM ctools_user.sakai_event_archive
WHERE event_date > '11-AUG-05' AND event_date < '12-AUG-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24:MI') 
ORDER BY event_time
);
SPOOL OFF


Sessions starting per day:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\sessions_per_day.txt
SELECT TO_CHAR(session_start,'YYYY-MM-DD') AS event_time, COUNT(*) AS session_count 
FROM chef_session_archive
WHERE session_start <> session_end AND session_end > session_start
AND session_start >= '01-JAN-05' AND session_start <= '01-MAY-05'
GROUP BY TO_CHAR(session_start,'YYYY-MM-DD') 
ORDER BY event_time;
SPOOL OFF

Number of sessions that are shorter than the given length of time:
SELECT COUNT(*) FROM chef_session_archive 
WHERE session_start <> session_end AND session_end > session_start 
AND ((session_end - session_start) > 0.00347222);
Oracle does date differences in terms of days.  So the above query figures out how many sessions
are more than 5 minutes long.  1 day divided by 24 hours divided by 60 minutes times 5 = 0.00347222...

Accesses of /content/public/server_info.html per hour:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\server_info_html_per_hour.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE 
event='content.read' 
AND ref='/content/public/server_info.html'
AND event_date >= '01-JAN-05' AND event_date <= '31-JAN-05'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24') 
ORDER BY event_time;
SPOOL OFF

uploads and downloads (content.XXXX) per hour _minus the extraneous gateway page content_:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\content_per_hour_no_gateway.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24')||':00:00' AS event_time, event AS event_name, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE 
event_date >= '01-JAN-05' AND event_date <= '01-FEB-05'
AND (event='content.read' OR event='content.new' OR event='content.revise' or event='content.delete')
AND ref NOT LIKE '/content/public/%'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24'), event
ORDER BY event_time, event_name;
SPOOL OFF

downloads (content.read) per minute _minus the extraneous gateway page content_:
SET PAGESIZE 30000
SPOOL c:\dev\analysis\downloads_per_minute_no_gateway.txt
SELECT TO_CHAR(event_date,'YYYY-MM-DD HH24:MI')||':00' AS event_time, COUNT(*) AS event_count 
FROM chef_event_archive
WHERE 
event_date >= '18-JAN-05' AND event_date <= '21-JAN-05'
AND (event='content.read')
AND ref NOT LIKE '/content/public/%'
GROUP BY TO_CHAR(event_date,'YYYY-MM-DD HH24:MI')
ORDER BY event_time;
SPOOL OFF

Gateway fluff content.read:
SELECT COUNT(*) FROM chef_event_archive
WHERE
event='content.read'
AND ref LIKE '/content/public/%'
AND event_date >= '01-JAN-05' AND event_date <= '31-JAN-05';


Dates for which we have session records:
SELECT DISTINCT TO_CHAR(session_start,'YYYY-MM-DD') AS session_start_date 
FROM chef_session_archive
ORDER BY session_start_date;


**** MYSQL QUERIES (NOT ALL WORKING YET, IGNORE) ****

MySQL, group events by a time period, (for example by hour):
SELECT DATE_FORMAT(event_date, '%Y-%m-%d %H:00:00') AS event_time, event AS event_name, count(*) AS event_count 
FROM sakai_event GROUP BY event_time, event_name ORDER BY event_time, event_name;

Get it into a data file:
SELECT STR_TO_DATE('%Y-%m-%d %H:%i:%s', DATE_FORMAT(event_date, '%Y-%c-%d %H:00:00')) AS event_time, event AS event_name, count(*) AS event_count 
INTO OUTFILE "/dev/event_analysis.csv" FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' 
FROM sakai_event GROUP BY event_time, event_name ORDER BY event_time, event_name;

Get it into a table:
DROP TABLE anal_events;
CREATE TABLE anal_events 
SELECT DATE_FORMAT(event_date, '%Y-%m-%d %H:00:00') AS event_time, event AS event_name, count(*) AS event_count 
FROM sakai_event GROUP BY event_time, event_name ORDER BY event_time, event_name;
SELECT * FROM anal_events;
ALTER TABLE anal_events MODIFY event_time DATETIME NOT NULL;
DESCRIBE anal_events;

Create a table listing all hours starting from 01-01-05:
DROP TABLE anal_calendar;
CREATE TABLE `anal_calendar` (
  `id` int(11) NOT NULL auto_increment,
  `the_time` datetime NOT NULL default '0000-00-00',
  PRIMARY KEY  (`id`)
);
Now, repeatedly execute this query once for each hour to add to the table (use cut&paste):
INSERT INTO anal_calendar SET the_time=DATE_ADD('2005-01-01', INTERVAL LAST_INSERT_ID() HOUR);

Create a table with the distinct event names in it.  This table can be modified later to cut out events we're not interested in:
DROP TABLE anal_eventnames;
CREATE TABLE anal_eventnames SELECT DISTINCT event AS event_name FROM sakai_event;

Create the cross-product of the hours and the distinct event names:
DROP TABLE anal_eventscrosstime;
CREATE TABLE anal_eventscrosstime SELECT * from anal_eventnames, anal_calendar 
WHERE the_time > '2005-06-01' AND the_time < '2005-08-01';

Now, get events per hour padded with 0s for hours where there were no events:
(NOT WORKING YET)
DROP TABLE anal_events_with_zeros;
CREATE TABLE anal_events_with_zeros SELECT anal_eventscrosstime.the_time, anal_eventscrosstime.event_name, event_count 
FROM anal_eventscrosstime LEFT JOIN anal_events ON anal_eventscrosstime.the_time=anal_events.event_timeWHERE anal_eventscrosstime.event_name=anal_events.event_name;

Get logins per hour (padded with 0s for hours where there were no logins):
DROP TABLE anal_logins_per_hour;
CREATE TABLE anal_logins_per_hour SELECT event_time, event_count FROM anal_events WHERE event_name='user.login';

DROP TABLE anal_logins_per_hour_with_zeros;
CREATE TABLE anal_logins_per_hour_with_zeros 
SELECT anal_calendar.the_time, anal_logins_per_hour.event_count 
FROM anal_calender LEFT JOIN anal_logins_per_hour ON the_time=event_time;

SELECT anal_calendar.the_time AS event_time, count(*) FROM anal_calendar LEFT JOIN anal_logins ON anal_calendar.the_time=anal_logins.event_date GROUP BY event_time;

SELECT the_time, event_name, event_count 
INTO OUTFILE "/dev/event_analysis_hours_with_zero.csv" FIELDS TERMINATED BY ',' LINES TERMINATED BY '\n' 
FROM anal_calendar LEFT JOIN anal_events ON anal_calendar.the_time=anal_events.event_time;


