<?xml version="1.0" encoding="ISO-8859-1"?>

<!DOCTYPE web-app PUBLIC
	  "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"  "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>

  <!-- $Header: /cvs/sakai/dispatch/src/webapp/WEB-INF/web.xml,v 1.18 2005/02/25 06:12:21 janderse.umich.edu Exp $ -->
  
  <display-name>
    sakai-dispatch
  </display-name>

  <!-- ======================== -->
  <!-- Filters.  They are applied in the order they are listed here. -->
  
  <!--  This filter forces the character encoding of every HTTP request to UTF-8 -->
  
  
  <filter>
    <filter-name>Set Character Encoding Filter</filter-name>
    <filter-class>org.sakaiproject.util.servletfilter.SetCharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>		
    <init-param>
      <param-name>ignore</param-name>
      <param-value>false</param-value>
    </init-param>		
  </filter>

  <!-- This filter will setup required Sakai services for the request. It applies to every 
       servlet except DAV. -->
  <filter>
    <filter-name>Setup Sakai Services Filter</filter-name>
    <filter-class>org.sakaiproject.util.servletfilter.SetupSakaiServicesFilter</filter-class>	
  </filter>
  
  <!-- This filter will setup required Sakai services for the request, for EXTERNAL
       webapps that must be coerced (forced) through the tunnel (so that they use the shared HttpSession).
       It only applies to URLs going through the external tunnel (xtunnel), and it 
       effectively 'traps' those servlets in the external tunnel -->
  <filter>
    <filter-name>Setup Sakai Services Filter External Tunnel</filter-name>
    <filter-class>org.sakaiproject.util.servletfilter.SetupSakaiServicesFilter</filter-class>	
     <!-- Whether to ensure that the webapp shares the same HttpSession with the other Sakai
      webapps; this is enforced by rewriting URLs to pass through the Sakai TunnelServlet. -->
    <init-param>
      <param-name>shareHttpSession</param-name>
      <param-value>true</param-value>
    </init-param> 
	<!-- Requests through the xtunnel handle their own file uploads; this filter does NOT parse the file uploads for them -->
    <init-param>
      <param-name>parseMultipart</param-name>
      <param-value>false</param-value>
    </init-param>    
	<!-- Whether to automatically pass through the PID (tool ID) in all generated URLs.
	     Helps in integration - allows SiteService and PortalService to get at the current site. -->
    <init-param>
      <param-name>passthroughPID</param-name>
      <param-value>true</param-value>
    </init-param>
  </filter>

  <filter-mapping>
    <filter-name>Setup Sakai Services Filter</filter-name>
    <servlet-name>dispatch-access</servlet-name>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>Setup Sakai Services Filter</filter-name>
    <servlet-name>dispatch-login</servlet-name>
  </filter-mapping>
  
  <filter-mapping>
    <filter-name>Setup Sakai Services Filter</filter-name>
    <servlet-name>tunnel</servlet-name>
  </filter-mapping>
 
  <!-- Setting the character encoding must happen FIRST,
    before any request variables are read.  Therefore, 
    the character encoding must be set here before the tunnel. -->
  <filter-mapping>
    <filter-name>Set Character Encoding Filter</filter-name>
    <url-pattern>/xtunnel/*</url-pattern>
  </filter-mapping> 
  
   <filter-mapping>
    <filter-name>Setup Sakai Services Filter External Tunnel</filter-name>
    <servlet-name>xtunnel</servlet-name>
  </filter-mapping>
   
  <!-- This filter would dump HTTP requests to the servlet log.  Useful for debugging. -->
  <!-- 
       <filter>
	 <filter-name>Request Dumper Filter</filter-name>
	 <filter-class>org.sakaiproject.util.servletfilter.RequestDumperFilter</filter-class>	
	 <init-param>
	   <param-name>active</param-name>
	   <param-value>true</param-value>
	 </init-param>
       </filter>
       <filter-mapping>
	 <filter-name>Request Dumper Filter</filter-name>
	 <url-pattern>/*</url-pattern>
       </filter-mapping>
       -->	
  
  <!-- =========================== -->
  
  <!-- Now setup tunnel servlets for the different requests.
       The Sakai requests are dispatched to the sakai-portal servlet.
       The convienent shortcut URLs (/site, /page, etc) are mapped to longer
       URLs (e.g. /varuna/site) for the actual URl parsing.
    -->
  
  <!-- For each tunnel servlet you can turn on tracing of the 
       tunnelling by setting the value of the init-param 
       to be "true".
    -->

  <!-- dispatcher for /varuna -->
  <servlet>
    <servlet-name>
      dispatch-varuna
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param>
      <param-name>redirect-context</param-name>
      <param-value>/sakai-portal</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/varuna</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
  </servlet>

  
  <!-- dispatch for /portal -->
  <servlet>
    <servlet-name>
      dispatch-portal
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param> 
      <param-name>redirect-context</param-name>
      <param-value>/sakai-portal</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/varuna/portal</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /gallery -->
  <servlet>
    <servlet-name>
      dispatch-gallery
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param> 
      <param-name>redirect-context</param-name>
      <param-value>/sakai-portal</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/varuna/gallery</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /site -->
  <servlet>
    <servlet-name>
      dispatch-site
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param> 
      <param-name>redirect-context</param-name>
      <param-value>/sakai-portal</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/varuna/site</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /page -->
  <servlet>
    <servlet-name>
      dispatch-page
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param> 
      <param-name>redirect-context</param-name>
      <param-value>/sakai-portal</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/varuna/page</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /tool -->
  <servlet>
    <servlet-name>
      dispatch-tool
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param> 
      <param-name>redirect-context</param-name>
      <param-value>/sakai-portal</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/varuna/tool</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /access -->
  <servlet>
    <servlet-name>
      dispatch-access
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param>
      <param-name>redirect-context</param-name>
      <param-value>/sakai-chef-tool</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/access</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /dav -->
  <servlet>
    <servlet-name>
      dispatch-dav
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param>
      <param-name>redirect-context</param-name>
      <param-value>/sakai-dav</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- dispatcher for /login -->
  <servlet>
    <servlet-name>
      dispatch-login
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param>
      <param-name>redirect-context</param-name>
      <param-value>/sakai-chef-tool</param-value>
    </init-param>
    <init-param>
      <param-name>redirect-path</param-name>
      <param-value>/authn</param-value>
    </init-param>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- tunnel for /tunnel - general tunnelling -->
  <servlet>
    <servlet-name>
      tunnel
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- tunnel for /xtunnel - general tunnelling for external (non-TPP) webapps -->
  <servlet>
    <servlet-name>
      xtunnel
    </servlet-name>
    <servlet-class>
      org.sakaiproject.tunnel.TunnelServlet
    </servlet-class>
    <init-param>
      <param-name>log</param-name>
      <param-value>false</param-value>
    </init-param>
    <load-on-startup>1</load-on-startup>
  </servlet>
  
  <!-- ======================= -->
  <!-- URL mappings for servlets -->
  
  <servlet-mapping>
    <servlet-name>
      dispatch-varuna
    </servlet-name>
    <url-pattern>
      /varuna/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-portal
    </servlet-name>
    <url-pattern>
      /portal/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-gallery
    </servlet-name>
    <url-pattern>
      /gallery/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-site 
    </servlet-name>
    <url-pattern>
      /site/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-page
    </servlet-name>
    <url-pattern>
      /page/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-tool
    </servlet-name>
    <url-pattern>
      /tool/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-access
    </servlet-name>
    <url-pattern>
      /access/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      dispatch-dav
    </servlet-name>
    <url-pattern>
      /dav/*
    </url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>
      dispatch-login
    </servlet-name>
    <url-pattern>
      /login/*
    </url-pattern>
  </servlet-mapping>

  <servlet-mapping>
    <servlet-name>
      tunnel
    </servlet-name>
    <url-pattern>
      /tunnel/*
    </url-pattern>
  </servlet-mapping>
  
  <servlet-mapping>
    <servlet-name>
      xtunnel
    </servlet-name>
    <url-pattern>
      /xtunnel/*
    </url-pattern>
  </servlet-mapping>

  <!-- =========================== -->
  <!-- Security constraints for DAV -->
  <security-constraint>
    <web-resource-collection>
      <web-resource-name>The Sakai DAV Access Point</web-resource-name>
      <url-pattern>/dav/*</url-pattern>
      <http-method>GET</http-method>
      <http-method>OPTIONS</http-method>
      <http-method>PROPFIND</http-method>
      <http-method>DELETE</http-method>
      <http-method>POST</http-method>
      <http-method>PUT</http-method>
      <http-method>LOCK</http-method>
    </web-resource-collection>
    <auth-constraint>
      <role-name>tomcat</role-name>
    </auth-constraint>
  </security-constraint>

  <login-config>
    <auth-method>BASIC</auth-method>
    <realm-name></realm-name>
  </login-config>

  <security-role>
    <description>
      An example role defined in "conf/tomcat-users.xml"
    </description>
    <role-name>tomcat</role-name>
  </security-role>
  
  <!-- ======================== -->
  <!-- Misc. -->
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>

</web-app>
