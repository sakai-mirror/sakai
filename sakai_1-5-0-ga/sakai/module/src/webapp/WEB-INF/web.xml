<?xml version="1.0"?>

<!DOCTYPE web-app PUBLIC
    "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
    "http://java.sun.com/dtd/web-app_2_3.dtd">

<web-app>
    <display-name>sakai-module</display-name>
    <description>Sakai Sample Tool &amp; Service Module</description>
    <context-param>
        <param-name>javax.faces.STATE_SAVING_METHOD</param-name>
        <param-value>server</param-value>
    </context-param>
    
    <!-- Faces Servlet -->
    <servlet>
        <servlet-name>Faces Servlet</servlet-name>
        <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>
        <load-on-startup> 2 </load-on-startup>
    </servlet>

    <!-- Dispatch Servlet -->
    <servlet>
        <servlet-name>dispatch</servlet-name>
        <servlet-class>org.sakaiproject.vm.DispatchServlet</servlet-class>
        <load-on-startup> 1 </load-on-startup>
    </servlet>

	<!-- to register our service components -->
    <servlet>
        <servlet-name>
           components
        </servlet-name>
        <servlet-class>
            org.sakaiproject.component.ComponentsServlet
        </servlet-class>

		<!-- pick the components xml for registration -->
        <init-param>
            <param-name>components-file</param-name>
            <param-value>components.xml</param-value>
        </init-param>

        <load-on-startup>1</load-on-startup>
    </servlet>

    <!-- Faces Servlet Mapping -->
    <!-- 

         This mapping identifies a jsp page as having JSF content.  If a
         request comes to the server for foo.jsf, the container will
         send the request to the FacesServlet, which will expect a
         corresponding foo.jsp page to exist containing the content.

    -->
    <servlet-mapping>
        <servlet-name>Faces Servlet</servlet-name>
        <url-pattern>*.jsf</url-pattern>
    </servlet-mapping>

    <!-- Dispatch Servlet Mapping -->
    <servlet-mapping>
        <servlet-name>dispatch</servlet-name>
        <url-pattern>*.tool</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
       <servlet-name>
          components
       </servlet-name>
       <url-pattern>
         /components/*
       </url-pattern>
    </servlet-mapping>

	<welcome-file-list>
	  <welcome-file>index.html</welcome-file>
	</welcome-file-list>

</web-app>
